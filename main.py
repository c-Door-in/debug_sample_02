from debugger import do, check

'''
Хочу поставить requests. Запускаю pip install requests. Пишет в консоль:
Requirement already satisfied: requests in /home/user/.venv/lib/python3.8/site-packages (2.25.1)

А когда запускаю скрипт, то всё взрывается:
ModuleNotFoundError: No module named 'requests'

Гипотезы

Запускается не тот скрипт
Версия Python не поддерживается библиотекой
битая библиотека
битый питон
    ошибка в пути уставновки пакетов
    конфликты версий нескольких установленных питонов
версия библиотеки не поддерживается питоном
ошибка в написании библиотеки
заглючил интерпретатор
заглючила оболочка
    Установка из одной оболочки - запуск из другой
скрипт запускается не в venv
    Не запущен venv
    Путь скрипта отличается от venv
глючат настройки venv






'''


def where_to_find():
    do('necessary')
    guess = check('Ошибка вопроизводится?')
    if guess:
        return 'yes'
    
    return 'no'


def скажи_как_починить():
    do('Пропиши первой строчкой в скрипте print("TEST") и запусти скрипт.')
    запускается_не_тот_скрипт = check('Появляется в консоли надпись "TEST"?')
    if запускается_не_тот_скрипт:
        return 'Проверь путь запускаемого скрипта'
    
    return проверить_работоспособность_библиотеки()


def проверить_работоспособность_библиотеки():
    do('Создай новый пустой скрипт рядом с существующим, пропиши import requests и запусти.')
    проблема_с_библиотекой = check('Ошибка сохраняется?')
    if проблема_с_библиотекой:
        return проверить_работоспособность_venv()

    return 'Ищи проблему в синтаксисе и орфографии.'


def проверить_работоспособность_venv():
    do(
        'Создай новую папку, в ней создай пустой скрипт, '
        'установи виртуальное окружение, установи requests, '
        'пропиши импорт в скрипте. Запусти скрипт.'
    )
    проблема_с_venv = check('Ошибка сохраняется?')
    if проблема_с_venv:
        return посмотреть_на_активность_venv()

    return переустановить_venv()


def посмотреть_на_активность_venv():
    do('Посмотри на начало строки в командной строке')
    активировано_виртуальное_окружение = check('В начале строки есть "env"?')
    if активировано_виртуальное_окружение:
        return переустановить_venv()

    return 'Необходимо активировать виртуальное окружение.'


def переустановить_venv():
    do('Снеси venv и установи его заново')
    проблема_не_в_созданном_venv = check('Ошибка сохраняется?')
    if проблема_не_в_созданном_venv:
        return проверить_другие_импорты()
    
    return 'Проблема решена'


def проверить_другие_импорты():
    do(
        'Установи заведомо не установленную библиотеку. '
        'Создай пустой скрипт и пропиши в нем только импорт установленной библиотеки. '
        'Запусти скрипт.'
    )
    проблема_в_среде_разработки = check('Есть сообщение об ошибке?')
    if проблема_в_среде_разработки:
        return перезагрузить_среду_разработки()
    
    return 'Нужно искать решение на профильных сайтах. Разрешать конфликты версий библиотеки, языка и системы.'


def перезагрузить_среду_разработки():
    do(
        'Перезагрузи систему и среду разработки. Запусти скрипт заново.'
    )
    проблема_в_установленной_библиотеке = check('Ошибка сохранилась?')
    if проблема_в_установленной_библиотеке:
        return (
            'Проблема с доступом к установленным библиотекам. '
            'Возможно потребуется переустановка Python. '
            'Нужно искать решение на профильных сайтах.'
        )
    
    return 'Проблема решена.'



print(скажи_как_починить())
